import{_ as e,c as s,o as i,a0 as n}from"./chunks/framework.NZiM7anj.js";const u=JSON.parse('{"title":"Testing","description":"Overview of the testing strategy, tools used, and best practices.","frontmatter":{"title":"Testing","description":"Overview of the testing strategy, tools used, and best practices."},"headers":[],"relativePath":"backend/testing/index.md","filePath":"backend/testing/index.md"}'),r={name:"backend/testing/index.md"};function o(a,t,l,c,d,g){return i(),s("div",null,t[0]||(t[0]=[n('<h1 id="testing-overview" tabindex="-1">Testing Overview <a class="header-anchor" href="#testing-overview" aria-label="Permalink to &quot;Testing Overview&quot;">​</a></h1><p>This project implements a comprehensive testing strategy to ensure code quality and reliability. The testing approach includes:</p><ul><li><strong>Unit Tests</strong>: Each module and service is tested in isolation to verify its functionality.</li><li><strong>Integration Tests</strong>: Tests that verify the interaction between different modules and services.</li><li><strong>End-to-End Tests</strong>: Tests that simulate user interactions with the application to ensure the entire system works as expected.</li></ul><h2 id="testing-tools" tabindex="-1">Testing Tools <a class="header-anchor" href="#testing-tools" aria-label="Permalink to &quot;Testing Tools&quot;">​</a></h2><ul><li><strong>Jest</strong>: A JavaScript testing framework used for writing unit and integration tests.</li><li><strong>Supertest</strong>: A library for testing HTTP servers, used for integration tests.</li></ul><p>For complex mocks and stubs, the project uses:</p><ul><li><strong>ts-mockito</strong>: A TypeScript library for creating mocks and stubs in tests.</li><li><strong>Sinon</strong>: A library for creating spies, mocks, and stubs in JavaScript tests.</li></ul>',7)]))}const h=e(r,[["render",o]]);export{u as __pageData,h as default};
