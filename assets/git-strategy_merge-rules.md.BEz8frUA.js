import{_ as t,c as a,o,a0 as r}from"./chunks/framework.NZiM7anj.js";const u=JSON.parse('{"title":"Merge Rules & Commit Guidelines","description":"Guidelines on merge types and commit message standards for Realworld.","frontmatter":{"title":"Merge Rules & Commit Guidelines","description":"Guidelines on merge types and commit message standards for Realworld.","order":4},"headers":[],"relativePath":"git-strategy/merge-rules.md","filePath":"git-strategy/merge-rules.md"}'),s={name:"git-strategy/merge-rules.md"};function i(d,e,l,c,n,m){return o(),a("div",null,e[0]||(e[0]=[r('<h1 id="merge-rules-commit-guidelines" tabindex="-1">Merge Rules &amp; Commit Guidelines <a class="header-anchor" href="#merge-rules-commit-guidelines" aria-label="Permalink to &quot;Merge Rules &amp; Commit Guidelines&quot;">​</a></h1><h2 id="merge-types" tabindex="-1">Merge Types <a class="header-anchor" href="#merge-types" aria-label="Permalink to &quot;Merge Types&quot;">​</a></h2><table tabindex="0"><thead><tr><th>From → To</th><th>Merge Type</th><th>Rationale</th></tr></thead><tbody><tr><td><code>task/*</code> → <code>feat/*</code></td><td>Squash &amp; merge</td><td>Keeps feature branch history concise and focused.</td></tr><tr><td><code>feat/*</code> → <code>dev</code></td><td>Squash &amp; merge</td><td>One commit per feature facilitates PR review.</td></tr><tr><td><code>dev</code> → <code>stage</code></td><td>Merge commit</td><td>Preserves commit granularity for changelogs.</td></tr><tr><td><code>stage</code> → <code>main</code></td><td>Merge commit</td><td>Includes full feature commit details in releases.</td></tr><tr><td><code>hotfix/*</code> → <code>main</code></td><td>Squash or merge</td><td>Depends on urgency; keep history clean or detailed.</td></tr></tbody></table><h2 id="why-this-mix" tabindex="-1">Why this mix? <a class="header-anchor" href="#why-this-mix" aria-label="Permalink to &quot;Why this mix?&quot;">​</a></h2><ul><li>Squash merges simplify feature and task branches.</li><li>Merge commits preserve detailed history for environment branches, crucial for automated changelogs.</li></ul><h2 id="commit-messages-pr-titles" tabindex="-1">Commit Messages &amp; PR Titles <a class="header-anchor" href="#commit-messages-pr-titles" aria-label="Permalink to &quot;Commit Messages &amp; PR Titles&quot;">​</a></h2><p>We strictly follow the <strong><a href="https://www.conventionalcommits.org/" target="_blank" rel="noreferrer">Conventional Commits</a></strong> spec:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes catppuccin-mocha catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span>&lt;type&gt;(&lt;scope&gt;): &lt;short summary&gt;</span></span></code></pre></div><p>Examples:</p><ul><li><code>feat(auth): add refresh token support</code></li><li><code>fix(ui): fix navbar alignment bug</code></li><li><code>docs(readme): update installation instructions</code></li></ul><h3 id="types" tabindex="-1">Types: <a class="header-anchor" href="#types" aria-label="Permalink to &quot;Types:&quot;">​</a></h3><ul><li><code>feat</code>, <code>fix</code>, <code>docs</code>, <code>style</code>, <code>refactor</code>, <code>perf</code>, <code>test</code>, <code>chore</code></li></ul><h3 id="enforcement" tabindex="-1">Enforcement: <a class="header-anchor" href="#enforcement" aria-label="Permalink to &quot;Enforcement:&quot;">​</a></h3><ul><li>Use <a href="https://commitlint.js.org/" target="_blank" rel="noreferrer">commitlint</a> in CI to reject non-conforming commits.</li><li>Enforce PR titles to follow the same pattern as they become the squash commit message.</li><li>Optionally use GitHub Actions or bots to validate PR titles.</li></ul>',14)]))}const p=t(s,[["render",i]]);export{u as __pageData,p as default};
