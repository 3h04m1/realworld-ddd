import{_ as t,c as i,o as l,a0 as a}from"./chunks/framework.NZiM7anj.js";const p=JSON.parse('{"title":"Pull Request Best Practices","description":"Guidelines to create and review pull requests in Realworld.","frontmatter":{"title":"Pull Request Best Practices","description":"Guidelines to create and review pull requests in Realworld.","order":4},"headers":[],"relativePath":"git-strategy/pr-guidelines.md","filePath":"git-strategy/pr-guidelines.md"}'),o={name:"git-strategy/pr-guidelines.md"};function r(s,e,n,d,c,u){return l(),i("div",null,e[0]||(e[0]=[a('<h1 id="pull-request-best-practices" tabindex="-1">Pull Request Best Practices <a class="header-anchor" href="#pull-request-best-practices" aria-label="Permalink to &quot;Pull Request Best Practices&quot;">​</a></h1><h2 id="creating-pull-requests" tabindex="-1">Creating Pull Requests <a class="header-anchor" href="#creating-pull-requests" aria-label="Permalink to &quot;Creating Pull Requests&quot;">​</a></h2><ul><li><p>Target branch must follow the rules:</p><ul><li><code>task/*</code> → corresponding <code>feat/*</code></li><li><code>feat/*</code> → <code>dev</code></li><li><code>bugfix/*</code> → <code>dev</code></li><li><code>hotfix/*</code> → <code>main</code> (and <code>stage</code>, <code>dev</code> if relevant)</li></ul></li><li><p>PR title <strong>must</strong> follow Conventional Commits.</p></li><li><p>Keep PRs small and focused on a single concern.</p></li><li><p>Include a descriptive PR body outlining:</p><ul><li>What was changed and why</li><li>Link to relevant user story or issue</li><li>Any deployment or testing instructions</li></ul></li></ul><h2 id="reviewing-pull-requests" tabindex="-1">Reviewing Pull Requests <a class="header-anchor" href="#reviewing-pull-requests" aria-label="Permalink to &quot;Reviewing Pull Requests&quot;">​</a></h2><ul><li>Verify PR title format.</li><li>Check that all tests pass.</li><li>Ensure code follows style and lint rules.</li><li>Validate no unrelated changes.</li><li>Leave comments for improvements or questions.</li></ul><h2 id="merging" tabindex="-1">Merging <a class="header-anchor" href="#merging" aria-label="Permalink to &quot;Merging&quot;">​</a></h2><ul><li>Use <strong>Squash merge</strong> for <code>task/*</code> and <code>feat/*</code> PRs.</li><li>Use <strong>Merge commit</strong> for <code>dev</code> → <code>stage</code> and <code>stage</code> → <code>main</code>.</li><li>After merging, delete feature or bugfix branches.</li></ul><hr><h2 id="hotfix-prs" tabindex="-1">Hotfix PRs <a class="header-anchor" href="#hotfix-prs" aria-label="Permalink to &quot;Hotfix PRs&quot;">​</a></h2><ul><li>Critical fixes that require immediate production deployment.</li><li>PRs target <code>main</code> and backport merges to <code>stage</code> and <code>dev</code>.</li><li>Prefer <strong>fast merges</strong> but still follow commit and PR guidelines.</li></ul>',10)]))}const h=t(o,[["render",r]]);export{p as __pageData,h as default};
